{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":75250,"databundleVersionId":8266514,"sourceType":"competition"}],"dockerImageVersionId":30684,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-18T10:00:22.513577Z","iopub.execute_input":"2024-04-18T10:00:22.514083Z","iopub.status.idle":"2024-04-18T10:00:22.533631Z","shell.execute_reply.started":"2024-04-18T10:00:22.514038Z","shell.execute_reply":"2024-04-18T10:00:22.531672Z"},"trusted":true},"execution_count":141,"outputs":[{"name":"stdout","text":"/kaggle/input/robi-datathon-30-qualifier-problem-1/boxes.csv\n/kaggle/input/robi-datathon-30-qualifier-problem-1/sample submission 1.csv\n/kaggle/input/robi-datathon-30-qualifier-problem-1/problem 1.csv\n/kaggle/input/robi-datathon-30-qualifier-problem-1/purchase.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"boxs_df = pd.read_csv('/kaggle/input/robi-datathon-30-qualifier-problem-1/boxes.csv')\nboxs_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:22.535419Z","iopub.execute_input":"2024-04-18T10:00:22.535824Z","iopub.status.idle":"2024-04-18T10:00:22.557704Z","shell.execute_reply.started":"2024-04-18T10:00:22.535792Z","shell.execute_reply":"2024-04-18T10:00:22.556563Z"},"trusted":true},"execution_count":142,"outputs":[{"execution_count":142,"output_type":"execute_result","data":{"text/plain":"   BOX_ID  QUALITY      DELIVERY_OPTION  MILK  MEAT  UNIT_PRICE\n0       1  Premium  Home Delivery - CoD   0.0   2.7        9.96\n1       2  Premium  Home Delivery - CoD   0.0   2.3       11.96\n2       3  Premium  Home Delivery - CoD   0.0   2.4       11.96\n3       4  Premium  Home Delivery - CoD   0.0   2.5       11.96\n4       5  Premium  Home Delivery - CoD   0.0   2.6       11.96","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>BOX_ID</th>\n      <th>QUALITY</th>\n      <th>DELIVERY_OPTION</th>\n      <th>MILK</th>\n      <th>MEAT</th>\n      <th>UNIT_PRICE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>0.0</td>\n      <td>2.7</td>\n      <td>9.96</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>0.0</td>\n      <td>2.3</td>\n      <td>11.96</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>0.0</td>\n      <td>2.4</td>\n      <td>11.96</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>0.0</td>\n      <td>2.5</td>\n      <td>11.96</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>0.0</td>\n      <td>2.6</td>\n      <td>11.96</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"purchase_df = pd.read_csv('/kaggle/input/robi-datathon-30-qualifier-problem-1/purchase.csv')\npurchase_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:22.560078Z","iopub.execute_input":"2024-04-18T10:00:22.560551Z","iopub.status.idle":"2024-04-18T10:00:25.002055Z","shell.execute_reply.started":"2024-04-18T10:00:22.560496Z","shell.execute_reply":"2024-04-18T10:00:25.001154Z"},"trusted":true},"execution_count":143,"outputs":[{"execution_count":143,"output_type":"execute_result","data":{"text/plain":"  PURCHASE_DATE    MAGIC_KEY  BOX_ID  BOX_COUNT\n0      1/2/2019  2CED678A247    12.0        1.0\n1      1/2/2019  2BF58D91BA1    12.0        1.0\n2      1/2/2019  2C15B86534E    99.0        1.0\n3      1/2/2019  2C32D9A859A     6.0        1.0\n4      1/2/2019  2C7A55404D1     4.0        1.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PURCHASE_DATE</th>\n      <th>MAGIC_KEY</th>\n      <th>BOX_ID</th>\n      <th>BOX_COUNT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1/2/2019</td>\n      <td>2CED678A247</td>\n      <td>12.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1/2/2019</td>\n      <td>2BF58D91BA1</td>\n      <td>12.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1/2/2019</td>\n      <td>2C15B86534E</td>\n      <td>99.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1/2/2019</td>\n      <td>2C32D9A859A</td>\n      <td>6.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1/2/2019</td>\n      <td>2C7A55404D1</td>\n      <td>4.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"purchase_df['BOX_ID'].isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:25.003633Z","iopub.execute_input":"2024-04-18T10:00:25.004128Z","iopub.status.idle":"2024-04-18T10:00:25.014393Z","shell.execute_reply.started":"2024-04-18T10:00:25.004100Z","shell.execute_reply":"2024-04-18T10:00:25.013407Z"},"trusted":true},"execution_count":144,"outputs":[{"execution_count":144,"output_type":"execute_result","data":{"text/plain":"47"},"metadata":{}}]},{"cell_type":"code","source":"purchase_df['BOX_ID'].isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:25.015973Z","iopub.execute_input":"2024-04-18T10:00:25.016409Z","iopub.status.idle":"2024-04-18T10:00:25.029176Z","shell.execute_reply.started":"2024-04-18T10:00:25.016377Z","shell.execute_reply":"2024-04-18T10:00:25.028218Z"},"trusted":true},"execution_count":145,"outputs":[{"execution_count":145,"output_type":"execute_result","data":{"text/plain":"47"},"metadata":{}}]},{"cell_type":"code","source":"purchase_df[purchase_df['BOX_ID'].isna()]","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:25.032005Z","iopub.execute_input":"2024-04-18T10:00:25.032710Z","iopub.status.idle":"2024-04-18T10:00:25.056368Z","shell.execute_reply.started":"2024-04-18T10:00:25.032675Z","shell.execute_reply":"2024-04-18T10:00:25.055202Z"},"trusted":true},"execution_count":146,"outputs":[{"execution_count":146,"output_type":"execute_result","data":{"text/plain":"        PURCHASE_DATE    MAGIC_KEY  BOX_ID  BOX_COUNT\n177          1/2/2019  28FF265F082     NaN        NaN\n178          1/2/2019  2CB168CDFA3     NaN        NaN\n179          1/2/2019  2C2C8844F09     NaN        NaN\n180          1/2/2019  2BDCCEF05A4     NaN        NaN\n181          1/2/2019  2BF1D98D0B2     NaN        NaN\n182          1/2/2019  2BDC3619EAF     NaN        NaN\n183          1/2/2019  290D33249B7     NaN        NaN\n184          1/2/2019  2BE266F8C55     NaN        NaN\n185          1/2/2019  2903192D056     NaN        NaN\n186          1/2/2019  2BE34886311     NaN        NaN\n187          1/2/2019  29E5BBC4C1C     NaN        NaN\n188          1/2/2019  2C5D80EF887     NaN        NaN\n189          1/2/2019  2CE917B8F56     NaN        NaN\n190          1/2/2019  2C0BB928475     NaN        NaN\n235979      12/2/2019  2CB168CDFA3     NaN        NaN\n379928      20/2/2019  2C2C8844F09     NaN        NaN\n380268      20/2/2019  290D33249B7     NaN        NaN\n399457      21/2/2019  2BDC3619EAF     NaN        NaN\n497112      25/2/2019  290D33249B7     NaN        NaN\n658423       4/1/2019  2BDC3619EAF     NaN        NaN\n709879       7/1/2019  28FF265F082     NaN        NaN\n912944      19/1/2019  2CE917B8F56     NaN        NaN\n913684      19/1/2019  2CB168CDFA3     NaN        NaN\n1042550     27/1/2019  2CE917B8F56     NaN        NaN\n1137208     3/12/2018  290D33249B7     NaN        NaN\n1188336     5/12/2018  2BE34886311     NaN        NaN\n1193731     5/12/2018  2BDC3619EAF     NaN        NaN\n1194926     6/12/2018  2C2C8844F09     NaN        NaN\n1250132     9/12/2018  2BE266F8C55     NaN        NaN\n1386953    24/12/2018  2CB168CDFA3     NaN        NaN\n1482810    21/12/2018  2BE266F8C55     NaN        NaN\n1578787    26/12/2018  29E5BBC4C1C     NaN        NaN\n1644933    10/11/2018  2BF1D98D0B2     NaN        NaN\n1688141     5/11/2018  2BE34886311     NaN        NaN\n1708925    15/11/2018  2C2C8844F09     NaN        NaN\n1716682    27/11/2018  2CB168CDFA3     NaN        NaN\n1782307     8/11/2018  2CB168CDFA3     NaN        NaN\n1846770     4/11/2018  2BDC3619EAF     NaN        NaN\n1951213     2/11/2018  29E5BBC4C1C     NaN        NaN\n1954217     2/11/2018  2CE917B8F56     NaN        NaN\n2144312    10/10/2018  2CE917B8F56     NaN        NaN\n2181361     9/10/2018  2CB168CDFA3     NaN        NaN\n2188029     9/10/2018  2BE34886311     NaN        NaN\n2228380    18/10/2018  2BE266F8C55     NaN        NaN\n2240877    18/10/2018  2BDC3619EAF     NaN        NaN\n2243419    17/10/2018  2BF1D98D0B2     NaN        NaN\n2250877    16/10/2018  2C2C8844F09     NaN        NaN","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PURCHASE_DATE</th>\n      <th>MAGIC_KEY</th>\n      <th>BOX_ID</th>\n      <th>BOX_COUNT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>177</th>\n      <td>1/2/2019</td>\n      <td>28FF265F082</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>178</th>\n      <td>1/2/2019</td>\n      <td>2CB168CDFA3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>179</th>\n      <td>1/2/2019</td>\n      <td>2C2C8844F09</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>180</th>\n      <td>1/2/2019</td>\n      <td>2BDCCEF05A4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>181</th>\n      <td>1/2/2019</td>\n      <td>2BF1D98D0B2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>182</th>\n      <td>1/2/2019</td>\n      <td>2BDC3619EAF</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>183</th>\n      <td>1/2/2019</td>\n      <td>290D33249B7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>184</th>\n      <td>1/2/2019</td>\n      <td>2BE266F8C55</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>185</th>\n      <td>1/2/2019</td>\n      <td>2903192D056</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>186</th>\n      <td>1/2/2019</td>\n      <td>2BE34886311</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>187</th>\n      <td>1/2/2019</td>\n      <td>29E5BBC4C1C</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>188</th>\n      <td>1/2/2019</td>\n      <td>2C5D80EF887</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>189</th>\n      <td>1/2/2019</td>\n      <td>2CE917B8F56</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>190</th>\n      <td>1/2/2019</td>\n      <td>2C0BB928475</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>235979</th>\n      <td>12/2/2019</td>\n      <td>2CB168CDFA3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>379928</th>\n      <td>20/2/2019</td>\n      <td>2C2C8844F09</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>380268</th>\n      <td>20/2/2019</td>\n      <td>290D33249B7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>399457</th>\n      <td>21/2/2019</td>\n      <td>2BDC3619EAF</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>497112</th>\n      <td>25/2/2019</td>\n      <td>290D33249B7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>658423</th>\n      <td>4/1/2019</td>\n      <td>2BDC3619EAF</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>709879</th>\n      <td>7/1/2019</td>\n      <td>28FF265F082</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>912944</th>\n      <td>19/1/2019</td>\n      <td>2CE917B8F56</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>913684</th>\n      <td>19/1/2019</td>\n      <td>2CB168CDFA3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1042550</th>\n      <td>27/1/2019</td>\n      <td>2CE917B8F56</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1137208</th>\n      <td>3/12/2018</td>\n      <td>290D33249B7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1188336</th>\n      <td>5/12/2018</td>\n      <td>2BE34886311</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1193731</th>\n      <td>5/12/2018</td>\n      <td>2BDC3619EAF</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1194926</th>\n      <td>6/12/2018</td>\n      <td>2C2C8844F09</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1250132</th>\n      <td>9/12/2018</td>\n      <td>2BE266F8C55</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1386953</th>\n      <td>24/12/2018</td>\n      <td>2CB168CDFA3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1482810</th>\n      <td>21/12/2018</td>\n      <td>2BE266F8C55</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1578787</th>\n      <td>26/12/2018</td>\n      <td>29E5BBC4C1C</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1644933</th>\n      <td>10/11/2018</td>\n      <td>2BF1D98D0B2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1688141</th>\n      <td>5/11/2018</td>\n      <td>2BE34886311</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1708925</th>\n      <td>15/11/2018</td>\n      <td>2C2C8844F09</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1716682</th>\n      <td>27/11/2018</td>\n      <td>2CB168CDFA3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1782307</th>\n      <td>8/11/2018</td>\n      <td>2CB168CDFA3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1846770</th>\n      <td>4/11/2018</td>\n      <td>2BDC3619EAF</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1951213</th>\n      <td>2/11/2018</td>\n      <td>29E5BBC4C1C</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1954217</th>\n      <td>2/11/2018</td>\n      <td>2CE917B8F56</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2144312</th>\n      <td>10/10/2018</td>\n      <td>2CE917B8F56</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2181361</th>\n      <td>9/10/2018</td>\n      <td>2CB168CDFA3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2188029</th>\n      <td>9/10/2018</td>\n      <td>2BE34886311</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2228380</th>\n      <td>18/10/2018</td>\n      <td>2BE266F8C55</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2240877</th>\n      <td>18/10/2018</td>\n      <td>2BDC3619EAF</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2243419</th>\n      <td>17/10/2018</td>\n      <td>2BF1D98D0B2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2250877</th>\n      <td>16/10/2018</td>\n      <td>2C2C8844F09</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"purchase_df.dropna(subset=['BOX_ID'], inplace=True)\n","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:25.057700Z","iopub.execute_input":"2024-04-18T10:00:25.058575Z","iopub.status.idle":"2024-04-18T10:00:25.198651Z","shell.execute_reply.started":"2024-04-18T10:00:25.058543Z","shell.execute_reply":"2024-04-18T10:00:25.197424Z"},"trusted":true},"execution_count":147,"outputs":[]},{"cell_type":"code","source":"purchase_df['BOX_ID'] = purchase_df['BOX_ID'].astype(int)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:25.199818Z","iopub.execute_input":"2024-04-18T10:00:25.200129Z","iopub.status.idle":"2024-04-18T10:00:25.215817Z","shell.execute_reply.started":"2024-04-18T10:00:25.200104Z","shell.execute_reply":"2024-04-18T10:00:25.214670Z"},"trusted":true},"execution_count":148,"outputs":[]},{"cell_type":"code","source":"work_df = purchase_df.merge(boxs_df, on = 'BOX_ID', suffixes=('_Pur','_Box'))\nwork_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:25.217187Z","iopub.execute_input":"2024-04-18T10:00:25.217957Z","iopub.status.idle":"2024-04-18T10:00:26.210628Z","shell.execute_reply.started":"2024-04-18T10:00:25.217926Z","shell.execute_reply":"2024-04-18T10:00:26.209384Z"},"trusted":true},"execution_count":149,"outputs":[{"execution_count":149,"output_type":"execute_result","data":{"text/plain":"  PURCHASE_DATE    MAGIC_KEY  BOX_ID  BOX_COUNT  QUALITY  \\\n0      1/2/2019  2CED678A247      12        1.0  Premium   \n1      1/2/2019  2BF58D91BA1      12        1.0  Premium   \n2      1/2/2019  2C15B86534E      99        1.0  Premium   \n3      1/2/2019  2C32D9A859A       6        1.0  Premium   \n4      1/2/2019  2C7A55404D1       4        1.0  Premium   \n\n                  DELIVERY_OPTION  MILK  MEAT  UNIT_PRICE  \n0             Home Delivery - CoD   8.0   1.5       12.98  \n1             Home Delivery - CoD   8.0   1.5       12.98  \n2  Delivery from Collection Point   0.0   3.3       13.96  \n3             Home Delivery - CoD   0.0   2.7       11.96  \n4             Home Delivery - CoD   0.0   2.5       11.96  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PURCHASE_DATE</th>\n      <th>MAGIC_KEY</th>\n      <th>BOX_ID</th>\n      <th>BOX_COUNT</th>\n      <th>QUALITY</th>\n      <th>DELIVERY_OPTION</th>\n      <th>MILK</th>\n      <th>MEAT</th>\n      <th>UNIT_PRICE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1/2/2019</td>\n      <td>2CED678A247</td>\n      <td>12</td>\n      <td>1.0</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>8.0</td>\n      <td>1.5</td>\n      <td>12.98</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1/2/2019</td>\n      <td>2BF58D91BA1</td>\n      <td>12</td>\n      <td>1.0</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>8.0</td>\n      <td>1.5</td>\n      <td>12.98</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1/2/2019</td>\n      <td>2C15B86534E</td>\n      <td>99</td>\n      <td>1.0</td>\n      <td>Premium</td>\n      <td>Delivery from Collection Point</td>\n      <td>0.0</td>\n      <td>3.3</td>\n      <td>13.96</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1/2/2019</td>\n      <td>2C32D9A859A</td>\n      <td>6</td>\n      <td>1.0</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>0.0</td>\n      <td>2.7</td>\n      <td>11.96</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1/2/2019</td>\n      <td>2C7A55404D1</td>\n      <td>4</td>\n      <td>1.0</td>\n      <td>Premium</td>\n      <td>Home Delivery - CoD</td>\n      <td>0.0</td>\n      <td>2.5</td>\n      <td>11.96</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"work_df.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:26.214270Z","iopub.execute_input":"2024-04-18T10:00:26.214632Z","iopub.status.idle":"2024-04-18T10:00:26.221743Z","shell.execute_reply.started":"2024-04-18T10:00:26.214601Z","shell.execute_reply":"2024-04-18T10:00:26.220568Z"},"trusted":true},"execution_count":150,"outputs":[{"execution_count":150,"output_type":"execute_result","data":{"text/plain":"(2455800, 9)"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"work_df['PURCHASE_DATE'] = pd.to_datetime(work_df['PURCHASE_DATE'], format='%d/%m/%Y')\nwork_df['Day'] = work_df['PURCHASE_DATE'].dt.day","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:26.223776Z","iopub.execute_input":"2024-04-18T10:00:26.224338Z","iopub.status.idle":"2024-04-18T10:00:26.719280Z","shell.execute_reply.started":"2024-04-18T10:00:26.224299Z","shell.execute_reply":"2024-04-18T10:00:26.718095Z"},"trusted":true},"execution_count":151,"outputs":[]},{"cell_type":"code","source":"work_df.columns","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:26.723340Z","iopub.execute_input":"2024-04-18T10:00:26.723733Z","iopub.status.idle":"2024-04-18T10:00:26.732960Z","shell.execute_reply.started":"2024-04-18T10:00:26.723700Z","shell.execute_reply":"2024-04-18T10:00:26.731604Z"},"trusted":true},"execution_count":152,"outputs":[{"execution_count":152,"output_type":"execute_result","data":{"text/plain":"Index(['PURCHASE_DATE', 'MAGIC_KEY', 'BOX_ID', 'BOX_COUNT', 'QUALITY',\n       'DELIVERY_OPTION', 'MILK', 'MEAT', 'UNIT_PRICE', 'Day'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"work_df[work_df['Day']<=15]['MAGIC_KEY'].nunique()# 1240412 Magic_Key non unique","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:26.734654Z","iopub.execute_input":"2024-04-18T10:00:26.735026Z","iopub.status.idle":"2024-04-18T10:00:27.265695Z","shell.execute_reply.started":"2024-04-18T10:00:26.734995Z","shell.execute_reply":"2024-04-18T10:00:27.264495Z"},"trusted":true},"execution_count":153,"outputs":[{"execution_count":153,"output_type":"execute_result","data":{"text/plain":"792055"},"metadata":{}}]},{"cell_type":"code","source":"work_df[work_df['Day']<=15]['BOX_ID'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:27.267299Z","iopub.execute_input":"2024-04-18T10:00:27.267763Z","iopub.status.idle":"2024-04-18T10:00:27.399418Z","shell.execute_reply.started":"2024-04-18T10:00:27.267723Z","shell.execute_reply":"2024-04-18T10:00:27.398304Z"},"trusted":true},"execution_count":154,"outputs":[{"execution_count":154,"output_type":"execute_result","data":{"text/plain":"256"},"metadata":{}}]},{"cell_type":"code","source":"work_df[work_df['Day']>15]['BOX_ID'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:27.401125Z","iopub.execute_input":"2024-04-18T10:00:27.401621Z","iopub.status.idle":"2024-04-18T10:00:27.529745Z","shell.execute_reply.started":"2024-04-18T10:00:27.401582Z","shell.execute_reply":"2024-04-18T10:00:27.528595Z"},"trusted":true},"execution_count":155,"outputs":[{"execution_count":155,"output_type":"execute_result","data":{"text/plain":"218"},"metadata":{}}]},{"cell_type":"code","source":"work_df['MAGIC_KEY'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:27.531133Z","iopub.execute_input":"2024-04-18T10:00:27.531764Z","iopub.status.idle":"2024-04-18T10:00:28.418123Z","shell.execute_reply.started":"2024-04-18T10:00:27.531732Z","shell.execute_reply":"2024-04-18T10:00:28.416890Z"},"trusted":true},"execution_count":156,"outputs":[{"execution_count":156,"output_type":"execute_result","data":{"text/plain":"1274087"},"metadata":{}}]},{"cell_type":"code","source":"work_df[work_df['Day']>15]['MAGIC_KEY'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:28.419734Z","iopub.execute_input":"2024-04-18T10:00:28.420322Z","iopub.status.idle":"2024-04-18T10:00:28.935344Z","shell.execute_reply.started":"2024-04-18T10:00:28.420280Z","shell.execute_reply":"2024-04-18T10:00:28.934466Z"},"trusted":true},"execution_count":157,"outputs":[{"execution_count":157,"output_type":"execute_result","data":{"text/plain":"769510"},"metadata":{}}]},{"cell_type":"code","source":"Magic_list = work_df[work_df['Day']<=15]['MAGIC_KEY'].tolist()\nBox_list = work_df[work_df['Day']<=15]['BOX_ID'].tolist()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:28.936472Z","iopub.execute_input":"2024-04-18T10:00:28.937509Z","iopub.status.idle":"2024-04-18T10:00:29.250491Z","shell.execute_reply.started":"2024-04-18T10:00:28.937477Z","shell.execute_reply":"2024-04-18T10:00:29.249430Z"},"trusted":true},"execution_count":158,"outputs":[]},{"cell_type":"code","source":"import re\n\ndef replace_alphabet_with_position(s):\n    return ''.join(str(ord(char) - ord('A')) if char.isalpha() else char for char in s)\n\nwork_df['MAGIC_KEY_REP'] = work_df['MAGIC_KEY'].apply(replace_alphabet_with_position)\n\n#work_df[['MAGIC_KEY', 'MAGIC_KEY_REP']]\nwork_df['MAGIC_KEY_REP'] = work_df['MAGIC_KEY_REP'].astype(int)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:29.251701Z","iopub.execute_input":"2024-04-18T10:00:29.252013Z","iopub.status.idle":"2024-04-18T10:00:41.061690Z","shell.execute_reply.started":"2024-04-18T10:00:29.251986Z","shell.execute_reply":"2024-04-18T10:00:41.060440Z"},"trusted":true},"execution_count":159,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"work_df['Buy'] = ((work_df['MAGIC_KEY'].isin(Magic_list)) & (work_df['BOX_ID'].isin(Box_list))).map({True: 1, False: 0})","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:41.063002Z","iopub.execute_input":"2024-04-18T10:00:41.063360Z","iopub.status.idle":"2024-04-18T10:00:42.451168Z","shell.execute_reply.started":"2024-04-18T10:00:41.063330Z","shell.execute_reply":"2024-04-18T10:00:42.450251Z"},"trusted":true},"execution_count":160,"outputs":[]},{"cell_type":"code","source":"work_df['Buy'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:42.455346Z","iopub.execute_input":"2024-04-18T10:00:42.456148Z","iopub.status.idle":"2024-04-18T10:00:42.494058Z","shell.execute_reply.started":"2024-04-18T10:00:42.456112Z","shell.execute_reply":"2024-04-18T10:00:42.491263Z"},"trusted":true},"execution_count":161,"outputs":[{"execution_count":161,"output_type":"execute_result","data":{"text/plain":"Buy\n1    1746235\n0     709565\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X = work_df['MAGIC_KEY_REP'].values.reshape(-1, 1)\ny = work_df['Buy']","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:42.500338Z","iopub.execute_input":"2024-04-18T10:00:42.502151Z","iopub.status.idle":"2024-04-18T10:00:42.509585Z","shell.execute_reply.started":"2024-04-18T10:00:42.502097Z","shell.execute_reply":"2024-04-18T10:00:42.507685Z"},"trusted":true},"execution_count":162,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, LogisticRegression\nfrom sklearn.metrics import accuracy_score\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.80, random_state=27)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:42.511611Z","iopub.execute_input":"2024-04-18T10:00:42.512214Z","iopub.status.idle":"2024-04-18T10:00:42.729867Z","shell.execute_reply.started":"2024-04-18T10:00:42.512142Z","shell.execute_reply":"2024-04-18T10:00:42.728630Z"},"trusted":true},"execution_count":163,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"LR = LogisticRegression()\n\nM_LR=LR.fit(X_train, y_train)\n\ny_pred = t.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:42.730980Z","iopub.execute_input":"2024-04-18T10:00:42.731289Z","iopub.status.idle":"2024-04-18T10:00:44.021470Z","shell.execute_reply.started":"2024-04-18T10:00:42.731261Z","shell.execute_reply":"2024-04-18T10:00:44.020283Z"},"trusted":true},"execution_count":164,"outputs":[{"name":"stdout","text":"Accuracy: 0.711305888101637\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"prob_df = pd.read_csv('/kaggle/input/robi-datathon-30-qualifier-problem-1/problem 1.csv')","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:44.024386Z","iopub.execute_input":"2024-04-18T10:00:44.024840Z","iopub.status.idle":"2024-04-18T10:00:44.066395Z","shell.execute_reply.started":"2024-04-18T10:00:44.024805Z","shell.execute_reply":"2024-04-18T10:00:44.064995Z"},"trusted":true},"execution_count":165,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"prob_df['MAGIC_KEY_REP'] = prob_df['MAGIC_KEY'].apply(replace_alphabet_with_position)\n\nprob_df[['MAGIC_KEY', 'MAGIC_KEY_REP']]","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:00:44.068175Z","iopub.execute_input":"2024-04-18T10:00:44.068578Z","iopub.status.idle":"2024-04-18T10:00:44.378800Z","shell.execute_reply.started":"2024-04-18T10:00:44.068516Z","shell.execute_reply":"2024-04-18T10:00:44.377708Z"},"trusted":true},"execution_count":166,"outputs":[{"execution_count":166,"output_type":"execute_result","data":{"text/plain":"         MAGIC_KEY MAGIC_KEY_REP\n0      28D5BB06356   28351106356\n1      293BEAB4E98   29314014498\n2      2962EE8065C   29624480652\n3      2957BE29EA9   29571429409\n4      28E351A0745   28435100745\n...            ...           ...\n58684  28FB7C09776   28517209776\n58685  28E0E3B69BF   28404316915\n58686  28D343103A7   28334310307\n58687  290B1D6D5CB   29011363521\n58688  28FF193CB94   28551932194\n\n[58689 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MAGIC_KEY</th>\n      <th>MAGIC_KEY_REP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>28D5BB06356</td>\n      <td>28351106356</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>293BEAB4E98</td>\n      <td>29314014498</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2962EE8065C</td>\n      <td>29624480652</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2957BE29EA9</td>\n      <td>29571429409</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28E351A0745</td>\n      <td>28435100745</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>58684</th>\n      <td>28FB7C09776</td>\n      <td>28517209776</td>\n    </tr>\n    <tr>\n      <th>58685</th>\n      <td>28E0E3B69BF</td>\n      <td>28404316915</td>\n    </tr>\n    <tr>\n      <th>58686</th>\n      <td>28D343103A7</td>\n      <td>28334310307</td>\n    </tr>\n    <tr>\n      <th>58687</th>\n      <td>290B1D6D5CB</td>\n      <td>29011363521</td>\n    </tr>\n    <tr>\n      <th>58688</th>\n      <td>28FF193CB94</td>\n      <td>28551932194</td>\n    </tr>\n  </tbody>\n</table>\n<p>58689 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"predictions = M_LR.predict(prob_df['MAGIC_KEY_REP'].values.reshape(-1, 1))\n\n# Create a DataFrame from predictions\npredictions_df = pd.DataFrame(predictions, columns=['PURCHASE'])\n\nprint(predictions_df)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:03:54.539090Z","iopub.execute_input":"2024-04-18T10:03:54.539506Z","iopub.status.idle":"2024-04-18T10:03:54.563667Z","shell.execute_reply.started":"2024-04-18T10:03:54.539473Z","shell.execute_reply":"2024-04-18T10:03:54.562278Z"},"trusted":true},"execution_count":171,"outputs":[{"name":"stdout","text":"       PURCHASE\n0             1\n1             1\n2             1\n3             1\n4             1\n...         ...\n58684         1\n58685         1\n58686         1\n58687         1\n58688         1\n\n[58689 rows x 1 columns]\n","output_type":"stream"}]},{"cell_type":"code","source":"# Concatenate prob_df and predictions_df\nconcatenated_df = pd.concat([prob_df, predictions_df], axis=1)\n\nprint(concatenated_df)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:04:03.307039Z","iopub.execute_input":"2024-04-18T10:04:03.307727Z","iopub.status.idle":"2024-04-18T10:04:03.324204Z","shell.execute_reply.started":"2024-04-18T10:04:03.307694Z","shell.execute_reply":"2024-04-18T10:04:03.323330Z"},"trusted":true},"execution_count":172,"outputs":[{"name":"stdout","text":"         MAGIC_KEY MAGIC_KEY_REP  PURCHASE\n0      28D5BB06356   28351106356         1\n1      293BEAB4E98   29314014498         1\n2      2962EE8065C   29624480652         1\n3      2957BE29EA9   29571429409         1\n4      28E351A0745   28435100745         1\n...            ...           ...       ...\n58684  28FB7C09776   28517209776         1\n58685  28E0E3B69BF   28404316915         1\n58686  28D343103A7   28334310307         1\n58687  290B1D6D5CB   29011363521         1\n58688  28FF193CB94   28551932194         1\n\n[58689 rows x 3 columns]\n","output_type":"stream"}]},{"cell_type":"code","source":"concatenated_df.drop('MAGIC_KEY_REP', axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:04:07.297994Z","iopub.execute_input":"2024-04-18T10:04:07.298378Z","iopub.status.idle":"2024-04-18T10:04:07.306749Z","shell.execute_reply.started":"2024-04-18T10:04:07.298348Z","shell.execute_reply":"2024-04-18T10:04:07.305502Z"},"trusted":true},"execution_count":173,"outputs":[]},{"cell_type":"code","source":"concatenated_df.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T10:04:09.689680Z","iopub.execute_input":"2024-04-18T10:04:09.690117Z","iopub.status.idle":"2024-04-18T10:04:09.792883Z","shell.execute_reply.started":"2024-04-18T10:04:09.690082Z","shell.execute_reply":"2024-04-18T10:04:09.791622Z"},"trusted":true},"execution_count":174,"outputs":[]}]}